openapi: '3.0.0'
info:
  title: 'Auth API'
  version: '1.0.0'
paths:
  /auth/register:
    post:
      summary: 'Tạo tài khoản người dùng ( nếu role là user thì phải truyền teamId ) '
      tags: ['Users']
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserData'
      responses:
        '201':
          description: 'User created successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: 'Invalid input data'
        '401':
          description: 'Unauthorized - Missing or invalid token'
        '409':
          description: 'Conflict - User already exists'
        '500':
          description: 'Internal server error'

  /auth/login:
    post:
      summary: 'Đăng nhập'
      tags: ['Users']
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginData'
      responses:
        '200':
          description: 'Đăng nhập thành công'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: 'Invalid input data'
        '401':
          description: 'Unauthorized - Missing or invalid token'
        '500':
          description: 'Internal server error'

  /auth/refresh-token:
    post:
      summary: 'Lấy lại token mới'
      tags: ['Users']
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: 'object'
              required:
                - 'refresh_token'
              properties:
                refresh_token:
                  type: 'string'
                  example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiaWF0IjoxNzQzMjQyODM3LCJleHAiOjE3NDM4NDc2Mzd9.8k90wlChJbh3Pz-Qxs8ctS8GNz8wO_uVcAPzlG2AnFc'
      responses:
        '200':
          description: 'Lấy token mới thành công'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: 'Invalid input data'
        '401':
          description: 'Unauthorized - Missing or invalid refresh token'
        '500':
          description: 'Internal server error'

  /user/{id}:
    get:
      summary: 'Lấy thông tin người dùng'
      tags: ['Users']
      security:
        - bearerAuth: []
      parameters:
        - name: 'id'
          in: 'path'
          required: true
          description: 'ID của người dùng'
          schema:
            type: 'integer'
          example: 1
      responses:
        '200':
          description: 'Lấy thông tin người dùng thành công'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 'Invalid input data'
        '401':
          description: 'Unauthorized - Missing or invalid token'
        '404':
          description: 'Người dùng không tồn tại'
        '500':
          description: 'Internal server error'

  /usser/update:
    put:
      summary: 'Cập nhật thông tin người dùng'
      description: 'Muốn cập nhật mât khẩu thì truyền old_password và new_password, cập nhật domains thì truyền domains, cập nhật status. Chọn 1 trong 3 '
      tags: ['Users']
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: 'object'
              properties:
                old_password:
                  type: 'string'
                  example: 'oldpassword123'
                new_password:
                  type: 'string'
                  example: 'newpassword123'
                domains:
                  type: 'array'
                  items:
                    type: 'string'
                    example: ['example.com', 'example.org']
                status:
                  type: 'string'
                  example: 'active'

      responses:
        '200':
          description: 'Cập nhật mật khẩu thành công'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 'Invalid input data'
        '401':
          description: 'Unauthorized - Missing or invalid token'
        '500':
          description: 'Internal server error'

  /team:
    get:
      summary: 'Lấy thông tin đội nhóm của người dùng dựa trên token'
      tags: ['Teams']
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 'Lấy thông tin đội nhóm thành công'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '401':
          description: 'Unauthorized - Token không hợp lệ hoặc thiếu user ID'
        '404':
          description: 'Không tìm thấy đội nhóm'
        '500':
          description: 'Lỗi server nội bộ'
    patch:
      summary: 'Cập nhật thông tin đội nhóm  '
      description: 'Nếu muốn cập nhật thành viên thì truyền memberId, nếu muốn cập nhật đường dẫn thì truyền targetUrl'
      tags: ['Teams']
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: 'object'
              properties:
                memberId:
                  type: 'integer'
                  example: 5
                targetUrl:
                  type: 'string'
                  example: 'https://example.com'
      responses:
        '200':
          description: 'Cập nhật thông tin đội nhóm thành công'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '401':
          description: 'Unauthorized - Token không hợp lệ hoặc thiếu user ID'
        '404':
          description: 'Không tìm thấy đội nhóm'
        '500':
          description: 'Lỗi server nội bộ'

  /team/get-list:
    post:
      summary: 'Lọc danh sách đội nhóm( chưa làm xong)'
      description: 'Truyền pageIndex và pageSize để phân trang, cùng với các tiêu chí lọc'
      tags: ['Teams']
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTeamListRequest'
      responses:
        '200':
          description: 'Lấy danh sách đội nhóm thành công'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTeamListResponse'
        '401':
          description: 'Unauthorized - Token không hợp lệ hoặc thiếu user ID'
        '500':
          description: 'Lỗi server nội bộ'

  /link:
    post:
      summary: 'Tạo link magic'
      tags: ['Link']
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: 'object'
              properties:
                targetUrl:
                  type: 'string'
                  example: 'https://example.com'
                mask:
                  type: 'string'
                  example: 'example-link'
      responses:
        '200':
          description: 'Tạo liên kết thành công'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLinkResponse'
        '401':
          description: 'Unauthorized - Token không hợp lệ hoặc thiếu user ID'
        '500':
          description: 'Lỗi server nội bộ'

  components:
    securitySchemes:
      bearerAuth:
        type: 'http'
        scheme: 'bearer'
        bearerFormat: 'JWT'
        description: 'JWT Authorization header using the Bearer scheme'

  /:path:
    get:
      summary: 'Link ngắn ngon path là phần sortlink mà khi tạo link trả ra'
      description: 'Link này sẽ chuyển hướng đến trang đích mà bạn đã chỉ định trong yêu cầu tạo liên kết nếu là bot thì sẽ trả về trang google.com  '
      tags: ['Link']
      parameters:
        - name: 'path'
          in: 'path'
          required: true
          description: 'Đường dẫn của liên kết ngắn'
          schema:
            type: 'string'
          example: 'example-link'
      responses:
        '200':
          description: 'Chuyển hướng thành công'
          content:
            application/json:
              schema:
                type: 'object'
                properties:
                  message:
                    type: 'string'
                    example: 'Chuyển hướng đến trang đích thành công'
        '404':
          description: 'Không tìm thấy liên kết ngắn'
        '500':
          description: 'Lỗi server nội bộ'

tags:
  - name: Users
    description: User management endpoints

  - name: Teams
    description: Teams management endpoints

  - name: Link
    description: Link  management endpoints
